{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","tvApi","get","id","append_to_response","term","query","encodeURIComponent","moviesApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","role","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","SHeader","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Routes","path","exact","component","Home","TV","Detail","Search","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd627bfc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"bc45bdd0d57c679d0a38dec9502c24ab\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 20px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  margin-top: 20px;\n  grid-gap: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span>Loading...</span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 50%;\n    }\n    ${Rating} {\n      opacity: 100%;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | JMFLIX</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nconst HomeContainer = class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't Find Movies Information.\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | JMFLIX</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.original_name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nconst TVContainer = class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't Find TV Information\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n};\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | JMFLIX</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Results\">\n              {tvResults.map((tv) => (\n                <Poster\n                  key={tv.id}\n                  id={tv.id}\n                  title={tv.original_name}\n                  imageUrl={tv.poster_path}\n                  rating={tv.vote_average}\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {movieResults &&\n            tvResults &&\n            movieResults.length === 0 &&\n            tvResults.length === 0 && (\n              <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n            )}\n        </>\n      )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.2s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ location: { pathname } }) => (\n  <SHeader>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </SHeader>\n);\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | JMFLIX</title>\n      </Helmet>\n\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text=\"Cannot Find Result\" color=\"#e74c3c\" />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | JMFLIX\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {(result.release_date\n                ? result.release_date\n                : result.first_air_date\n              ).substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't Find Anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n};\n\nexport default DetailContainer;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nconst Routes = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/tv/:id\" exact component={Detail} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/search\" component={Search} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}